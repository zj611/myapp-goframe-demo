// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// AccountDao is the manager for logic model data accessing and custom defined data operations functions management.
type AccountDao struct {
	gmvc.M                // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C      accountColumns // C is the short type for Columns, which contains all the column names of Table for convenient usage.
	DB     gdb.DB         // DB is the raw underlying database management object.
	Table  string         // Table is the underlying table name of the DAO.
}

// AccountColumns defines and stores column names for table account.
type accountColumns struct {
	Account         string //
	Balance         string //
	Interest        string //
	TransactionTime string //
	CreateAt        string //
	UpdateAt        string //
}

// NewAccountDao creates and returns a new DAO object for table data access.
func NewAccountDao() *AccountDao {
	columns := accountColumns{
		Account:         "account",
		Balance:         "balance",
		Interest:        "interest",
		TransactionTime: "transaction_time",
		CreateAt:        "create_at",
		UpdateAt:        "update_at",
	}
	return &AccountDao{
		C:     columns,
		M:     g.DB("default").Model("account").Safe(),
		DB:    g.DB("default"),
		Table: "account",
	}
}
